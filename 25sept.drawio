<mxfile host="app.diagrams.net" modified="2023-09-27T22:31:18.236Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36 Edg/117.0.2045.36" etag="0iPd40egXP_4aeGSUfou" version="21.8.2" type="github">
  <diagram name="Página-1" id="_WKy5hyCKDBeSHOf2f6W">
    <mxGraphModel dx="2016" dy="4134" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="5z_EyvK3sEdfh1NYNkOx-2" value="25 sept" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="340" y="30" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5z_EyvK3sEdfh1NYNkOx-4" value="&lt;div&gt;Imports System.Data.Common&lt;/div&gt;&lt;div&gt;Imports Microsoft.Practices.EnterpriseLibrary.Data&lt;/div&gt;&lt;div&gt;Imports EXPALSA.SPROCAMARON.Entidades&lt;/div&gt;&lt;div&gt;Public Class RetiroLoteDetDA&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Inherits AccesoGeneralDA&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Implements ITransactionDA&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Private Const tableName As String = &quot;RetiroLoteDet&quot;&lt;/div&gt;&lt;div&gt;#Region &quot;Constructores&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; Permite instanciar un objeto de este tipo.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;/summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;remarks&amp;gt;&amp;lt;/remarks&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Sub New()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MyBase.New()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Sub&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; Permite asignar un objeto Database ya existente a esta clase.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;/summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;param name=&quot;innerDataBase&quot;&amp;gt;Una instancia de tipo &amp;lt;see cref=&quot;Database&quot;&amp;gt;DataBase.&amp;lt;/see&amp;gt;&amp;lt;/param&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;remarks&amp;gt;&amp;lt;/remarks&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Sub New(ByVal innerDataBase As Database)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MyBase.New(innerDataBase)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Sub&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; Permite asignar parte de los parametros que conforman la cadena de conexión al Origen de Datos.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;/summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;param name=&quot;SQLUser&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;param name=&quot;SQLPassword&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;remarks&amp;gt;&amp;lt;/remarks&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Sub New(ByVal SQLUser As String, ByVal SQLPassword As String)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MyBase.New(SQLUser, SQLPassword)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Sub&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; Permite asignar todos los parametros que conforman la cadena de conexión al Origen de Datos.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;/summary&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;param name=&quot;SQLUser&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;param name=&quot;SQLPassword&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;param name=&quot;DataBaseName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;param name=&quot;ServerName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;&#39;&#39; &amp;lt;remarks&amp;gt;&amp;lt;/remarks&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Sub New(ByVal SQLUser As String, ByVal SQLPassword As String, ByVal DataBaseName As String, ByVal ServerName As String)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MyBase.New(SQLUser, SQLPassword, DataBaseName, ServerName)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Sub&lt;/div&gt;&lt;div&gt;#End Region&lt;/div&gt;&lt;div&gt;#Region &quot;Funciones que no deben ser implementadas&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Overrides Function Consultar(ByVal codigo As Object) As Object&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw New NotImplementedException&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Overrides Function DatosGeneral(ByVal Entidad As Object, ByVal TipoOpcion As String, Optional ByVal Transaccion As System.Data.Common.DbTransaction = Nothing) As Boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw New NotImplementedException&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;#End Region&lt;/div&gt;&lt;div&gt;#Region &quot;Funciones Utilitarios&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Overloads Overrides Function ConsultarTodos(ByVal condicion As String) As System.Data.DataSet&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return ConsultaGeneral(InnerDataBase.GetStoredProcCommand(tableName), condicion, defaultQueryOption)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;#End Region&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Function GrabarCambios(ByVal dataChanged As System.Data.DataSet, ByVal Transaccion As System.Data.Common.DbTransaction) As Boolean Implements ITransactionDA.GrabarCambios&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim actionResult As Boolean = False&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim insertCmd As DbCommand = InnerDataBase.GetStoredProcCommand(tableName)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;cseRetiroLote&quot;, DbType.String, &quot;cseRetiroLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nciRetiroLote&quot;, DbType.Int64, &quot;nciRetiroLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nqnSecuencia&quot;, DbType.Int32, &quot;nqnSecuencia&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;cseRecepcionProducto&quot;, DbType.String, &quot;cseRecepcionProducto&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nciRecepcionProducto&quot;, DbType.Int64, &quot;nciRecepcionProducto&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nqnTotLibrasRemitidasLote&quot;, DbType.Decimal, &quot;nqnTotLibrasRemitidasLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;cseGuiaMoviTransCamaron&quot;, DbType.String, &quot;cseGuiaMoviTransCamaron&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nciGuiaMoviTransCamaron&quot;, DbType.Int64, &quot;nciGuiaMoviTransCamaron&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nqnTotLibrasRemitidasGuia&quot;, DbType.Decimal, &quot;nqnTotLibrasRemitidasGuia&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nqnTotLibrasRemitidasRetiradas&quot;, DbType.Decimal, &quot;nqnTotLibrasRemitidasRetiradas&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;IDRetiroLoteMotivo&quot;, DbType.Int32, &quot;IDRetiroLoteMotivo&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;IDRetiroLoteMaterial&quot;, DbType.String, &quot;IDRetiroLoteMaterial&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;nqnRetiroLoteMaterial&quot;, DbType.Decimal, &quot;nqnRetiroLoteMaterial&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;InnerDataBase.AddInParameter(insertCmd, &quot;cnoChofer&quot;, DbType.String, &quot;cnoChofer&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;InnerDataBase.AddInParameter(insertCmd, &quot;cidChofer&quot;, DbType.String, &quot;cidChofer&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;InnerDataBase.AddInParameter(insertCmd, &quot;cPlaca&quot;, DbType.String, &quot;cPlaca&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;bstMaterialExpalsa&quot;, DbType.Boolean, &quot;bstMaterialExpalsa&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;bstRetirado&quot;, DbType.Boolean, &quot;Seleccionar&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;cciUsuarioCrea&quot;, DbType.String, &quot;cciUsuarioCrea&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;dfeCreacion&quot;, DbType.DateTime, &quot;dfeCreacion&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;cciUsuarioModi&quot;, DbType.String, &quot;cciUsuarioModi&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;dfeModifica&quot;, DbType.DateTime, &quot;dfeModifica&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;workStation&quot;, DbType.String, &quot;workStation&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(insertCmd, &quot;opcion&quot;, DbType.String, &quot;NUEVO&quot;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim updateCmd As DbCommand = InnerDataBase.GetStoredProcCommand(tableName)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;cseRetiroLote&quot;, DbType.String, &quot;cseRetiroLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nciRetiroLote&quot;, DbType.Int64, &quot;nciRetiroLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nqnSecuencia&quot;, DbType.Int32, &quot;nqnSecuencia&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;cseRecepcionProducto&quot;, DbType.String, &quot;cseRecepcionProducto&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nciRecepcionProducto&quot;, DbType.Int64, &quot;nciRecepcionProducto&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nqnTotLibrasRemitidasLote&quot;, DbType.Decimal, &quot;nqnTotLibrasRemitidasLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;cseGuiaMoviTransCamaron&quot;, DbType.String, &quot;cseGuiaMoviTransCamaron&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nciGuiaMoviTransCamaron&quot;, DbType.Int64, &quot;nciGuiaMoviTransCamaron&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nqnTotLibrasRemitidasGuia&quot;, DbType.Decimal, &quot;nqnTotLibrasRemitidasGuia&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nqnTotLibrasRemitidasRetiradas&quot;, DbType.Decimal, &quot;nqnTotLibrasRemitidasRetiradas&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;IDRetiroLoteMotivo&quot;, DbType.Int32, &quot;IDRetiroLoteMotivo&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;IDRetiroLoteMaterial&quot;, DbType.String, &quot;IDRetiroLoteMaterial&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;nqnRetiroLoteMaterial&quot;, DbType.Decimal, &quot;nqnRetiroLoteMaterial&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;InnerDataBase.AddInParameter(updateCmd, &quot;cnoChofer&quot;, DbType.String, &quot;cnoChofer&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;InnerDataBase.AddInParameter(updateCmd, &quot;cidChofer&quot;, DbType.String, &quot;cidChofer&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;InnerDataBase.AddInParameter(updateCmd, &quot;cPlaca&quot;, DbType.String, &quot;cPlaca&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;bstMaterialExpalsa&quot;, DbType.Boolean, &quot;bstMaterialExpalsa&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;bstRetirado&quot;, DbType.Boolean, &quot;Seleccionar&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;cciUsuarioCrea&quot;, DbType.String, &quot;cciUsuarioCrea&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;dfeCreacion&quot;, DbType.DateTime, &quot;dfeCreacion&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;cciUsuarioModi&quot;, DbType.String, &quot;cciUsuarioModi&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;dfeModifica&quot;, DbType.DateTime, &quot;dfeModifica&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;workStation&quot;, DbType.String, &quot;workStation&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(updateCmd, &quot;opcion&quot;, DbType.String, &quot;MODIFICAR&quot;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim deleteCmd As DbCommand = InnerDataBase.GetStoredProcCommand(tableName)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(deleteCmd, &quot;cseRetiroLote&quot;, DbType.String, &quot;cseRetiroLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(deleteCmd, &quot;nciRetiroLote&quot;, DbType.Int64, &quot;nciRetiroLote&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(deleteCmd, &quot;nqnSecuencia&quot;, DbType.Int32, &quot;nqnSecuencia&quot;, DataRowVersion.Current)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; InnerDataBase.AddInParameter(deleteCmd, &quot;opcion&quot;, DbType.String, &quot;ELIMINAR&quot;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim rowsAffected As Integer = 0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If (dataChanged.GetChanges(DataRowState.Deleted) IsNot Nothing) Then&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rowsAffected += InnerDataBase.UpdateDataSet(dataChanged.GetChanges(DataRowState.Deleted), tableName, Nothing, Nothing, deleteCmd, Transaccion)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If (dataChanged.GetChanges(DataRowState.Modified) IsNot Nothing) Then&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rowsAffected += InnerDataBase.UpdateDataSet(dataChanged.GetChanges(DataRowState.Modified), tableName, Nothing, updateCmd, Nothing, Transaccion)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If (dataChanged.GetChanges(DataRowState.Added) IsNot Nothing) Then&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rowsAffected += InnerDataBase.UpdateDataSet(dataChanged.GetChanges(DataRowState.Added), tableName, insertCmd, Nothing, Nothing, Transaccion)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; actionResult = (rowsAffected &amp;gt; 0)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Catch&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End Try&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return actionResult&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Function ValidarLote(ByVal condicion As String) As String&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim bl As String&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim cmdWrapper2 As DbCommand = InnerDataBase.GetStoredProcCommand(&quot;RetiroLoteDet&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmdWrapper2.Parameters.Clear()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With InnerDataBase&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;opcion&quot;, DbType.String, &quot;VALIDAR_LOTE&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;Condicion&quot;, DbType.String, condicion)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End With&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bl = InnerDataBase.ExecuteScalar(cmdWrapper2)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return bl&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Catch ex As Exception&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Function ValidarLoteCompleto(ByVal serie As String, ByVal documento As Integer) As DataSet&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim cmdWrapper2 As DbCommand = InnerDataBase.GetStoredProcCommand(&quot;RetiroLoteDet&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmdWrapper2.Parameters.Clear()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With InnerDataBase&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;opcion&quot;, DbType.String, &quot;VALIDAR_LOTE_COMPLETO&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;cseRecepcionProducto&quot;, DbType.String, serie)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;nciRecepcionProducto&quot;, DbType.Int32, documento)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End With&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return InnerDataBase.ExecuteDataSet(cmdWrapper2)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Catch ex As Exception&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Function ProveedorLote(ByVal serie As String, ByVal documento As Integer) As String&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim str As String&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim cmdWrapper2 As DbCommand = InnerDataBase.GetStoredProcCommand(&quot;RetiroLoteDet&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmdWrapper2.Parameters.Clear()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With InnerDataBase&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;opcion&quot;, DbType.String, &quot;PROVEEDOR_LOTE&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;cseRecepcionProducto&quot;, DbType.String, serie)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;nciRecepcionProducto&quot;, DbType.String, documento)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End With&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; str = InnerDataBase.ExecuteScalar(cmdWrapper2)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return str&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Catch ex As Exception&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Function LoteLiquidado(ByVal serie As String, ByVal documento As Integer) As Boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim bl As Boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim cmdWrapper2 As DbCommand = InnerDataBase.GetStoredProcCommand(&quot;RetiroLoteDet&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmdWrapper2.Parameters.Clear()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With InnerDataBase&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;opcion&quot;, DbType.String, &quot;LOTE_LIQUIDADO&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;cseRecepcionProducto&quot;, DbType.String, serie)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;nciRecepcionProducto&quot;, DbType.String, documento)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End With&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bl = InnerDataBase.ExecuteScalar(cmdWrapper2)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return bl&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Catch ex As Exception&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Function LoteCompra(ByVal serie As String, ByVal documento As Integer) As Boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim bl As Boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim cmdWrapper2 As DbCommand = InnerDataBase.GetStoredProcCommand(&quot;RetiroLoteDet&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmdWrapper2.Parameters.Clear()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With InnerDataBase&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;opcion&quot;, DbType.String, &quot;LOTE_COMPRA&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;cseRecepcionProducto&quot;, DbType.String, serie)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;nciRecepcionProducto&quot;, DbType.String, documento)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End With&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bl = InnerDataBase.ExecuteScalar(cmdWrapper2)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return bl&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Catch ex As Exception&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Public Function LoteAnulado(ByVal serie As String, ByVal documento As Integer) As Boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim bl As Boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Dim cmdWrapper2 As DbCommand = InnerDataBase.GetStoredProcCommand(&quot;RetiroLoteDet&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmdWrapper2.Parameters.Clear()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With InnerDataBase&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;opcion&quot;, DbType.String, &quot;LOTE_ANULADO&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;cseRecepcionProducto&quot;, DbType.String, serie)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .AddInParameter(cmdWrapper2, &quot;nciRecepcionProducto&quot;, DbType.String, documento)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End With&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bl = InnerDataBase.ExecuteScalar(cmdWrapper2)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return bl&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Catch ex As Exception&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throw&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End Try&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; End Function&lt;/div&gt;&lt;div&gt;End Class&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="100" y="30" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SfFKQqWvnkkJyp5RO3jU-5" value="25 sept" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="490" y="30" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="9IhrqdiNxo28_EPwkcJ8-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.167;entryY=0.481;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="5z_EyvK3sEdfh1NYNkOx-4" target="5z_EyvK3sEdfh1NYNkOx-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
